@model HandleOrderViewModel

<h2>Handle Order</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (Model != null)
{
    <div>
        <h4>Order Details</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-3">Order ID</dt>
            <dd class="col-sm-9">@Model.Order.OrderId</dd>

            <dt class="col-sm-3">Customer</dt>
            @if (Model.Order.Customer == null)
            {
                <dd class="col-sm-9">Guest Customer</dd>
            }
            else
            {
                if (string.IsNullOrEmpty(Model.Order.Customer.CompanyName))
                {
                    <dd class="col-sm-9">@Model.Order.Customer.ContactName</dd>
                }
                else
                {
                    <dd class="col-sm-9">@Model.Order.Customer.CompanyName</dd>
                }
            }

            <dt class="col-sm-3">Email</dt>
            <dd class="col-sm-9">@Model.Order.GuestEmail</dd>

            <dt class="col-sm-3">Shipping Address</dt>
            <dd class="col-sm-9">@Model.Order.ShipAddress</dd>

            <dt class="col-sm-3">Shipping City</dt>
            <dd class="col-sm-9">@Model.Order.ShipCity</dd>

            <dt class="col-sm-3">Postal Code</dt>
            <dd class="col-sm-9">@Model.Order.ShipPostalCode</dd>

            <dt class="col-sm-3">Order Date</dt>
            <dd class="col-sm-9">@Model.Order.OrderDate.ToString("yyyy-MM-dd HH:mm")</dd>
        </dl>
    </div>

    <div>
        <h4>Order Items</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Unit Price</th>
                    <th>Total</th>
                    <th>Units in Stock</th>
                    <th>Reserved Stock</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Order.OrderDetails)
                {
                    <tr>
                        <td>@item.Product.ProductName</td>
                        <td>@item.Quantity</td>
                        <td>@item.UnitPrice.ToString("C2")</td>
                        <td>@((item.Quantity * item.UnitPrice).ToString("C2"))</td>
                        <td>@item.Product.UnitsInStock</td>
                        <td>@item.Product.ReservedStock</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div>
        <form method="post" asp-action="CloseOrder" asp-route-id="@Model.Order.OrderId" class="d-inline mr-2">
            <button type="submit" class="btn btn-primary" onclick="return confirmOrderCompletion();">Complete Order</button>
        </form>

        <form id="cancelOrderForm_@Model.Order.OrderId" method="post" asp-action="CancelOrder" asp-route-id="@Model.Order.OrderId" class="d-inline mr-2">
            <a href="#" onclick="confirmCancelOrder(@Model.Order.OrderId); return false;" class="btn btn-danger">Cancel Order</a>
        </form>

        <form method="get" asp-action="EditOrderQuantities" asp-route-id="@Model.Order.OrderId" class="d-inline mr-2">
            <button type="submit" class="btn btn-secondary">Edit Order</button>
        </form>
        <form asp-action="RevertToPending" asp-route-id="@Model.Order.OrderId" method="post" class="d-inline">
            <button type="submit" class="btn btn-secondary">Back to Pending</button>
        </form>
    </div>

    
}
else
{
    <p>Order not found.</p>
}

<script>
    function confirmCancelOrder(orderId) {
        if (confirm("Are you sure you want to cancel this order?")) {
            document.getElementById("cancelOrderForm_" + orderId).submit();
        }
    }
    function confirmOrderCompletion() {
        if (confirm("Are you sure you want to complete this order?")) {
            alert("Order @Model.Order.OrderId has been confirmed successfully!");
            return true;
        }
        return false;
    }


</script>

